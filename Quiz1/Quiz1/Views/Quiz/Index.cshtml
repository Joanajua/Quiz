@model IEnumerable<Quiz>
@inject SignInManager<IdentityUser> signInManager

@{
    ViewData["Title"] = "List";
}

@{int i = 1;}


<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table table-hover">
    <thead class="thead-dark">
        <tr>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Any())
        {
            @foreach (var item in Model)
            {
                <tr class="row-clicable" onclick="location.href = '@Url.ActionLink("Play", "Quiz", new {id = item.QuizId})'">
                    <th>
                        @*Column with int indicating order*@
                        <span>@(i++)</span>
                    </th>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @if (signInManager.IsSignedIn(User) && User.HasClaim("Can Manage Quizzes", "Can Manage Quizzes"))
                        {
                            <form method="post" asp-action="Delete" asp-route-id="@item.QuizId">
                                <a class="btn btn-primary" asp-controller="Quiz" asp-action="Edit" asp-route-id="@item.QuizId">Edit</a>
                                <a class="btn btn-dark" type="submit" asp-controller="Quiz" asp-action="Delete" asp-route-id="@item.QuizId">Delete</a>
                                @*<button type="submit" class="btn btn-dark">Delete</button>*@
                            </form>
                        }
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <th scope="row">
                    <h4 class="alert-heading alert-info">There are no quizzes for the requested search.</h4>
                </th>
            </tr>
        }
    </tbody>
</table>
